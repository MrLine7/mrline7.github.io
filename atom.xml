<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你猜~</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaokegege.github.io/"/>
  <updated>2019-03-19T09:26:46.216Z</updated>
  <id>https://xiaokegege.github.io/</id>
  
  <author>
    <name>lk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 主流日志工具库</title>
    <link href="https://xiaokegege.github.io/Java%20%E4%B8%BB%E6%B5%81%E6%97%A5%E5%BF%97log%E8%AF%B4%E6%98%8E/"/>
    <id>https://xiaokegege.github.io/Java 主流日志log说明/</id>
    <published>2019-03-19T09:26:40.000Z</published>
    <updated>2019-03-19T09:26:46.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-主流日志工具库"><a href="#Java-主流日志工具库" class="headerlink" title="Java 主流日志工具库"></a>Java 主流日志工具库</h1><h2 id="1-日志框架汇总"><a href="#1-日志框架汇总" class="headerlink" title="1.日志框架汇总"></a>1.日志框架汇总</h2><h3 id="1-1java-util-logging（JUL）"><a href="#1-1java-util-logging（JUL）" class="headerlink" title="1.1java.util.logging（JUL）"></a>1.1java.util.logging（JUL）</h3><p>JDK1.4 开始，通过 <code>java.util.logging</code> 提供日志功能。</p><p>它能满足基本的日志需要，但是功能没有 Log4j 强大，而且使用范围也没有 Log4j 广泛。</p><h3 id="1-2Log4j"><a href="#1-2Log4j" class="headerlink" title="1.2Log4j"></a>1.2Log4j</h3><p>Log4j 是 apache 的一个开源项目，创始人 Ceki Gulcu。</p><p>Log4j 应该说是 Java 领域资格最老，应用最广的日志工具。从诞生之日到现在一直广受业界欢迎。</p><p>Log4j 是高度可配置的，并可通过在运行时的外部文件配置。它根据记录的优先级别，并提供机制，以指示记录信息到许多的目的地，诸如：数据库，文件，控制台，UNIX 系统日志等。</p><p>Log4j 中有三个主要组成部分：</p><ul><li><strong>loggers</strong> - 负责捕获记录信息。</li><li><strong>appenders</strong> - 负责发布日志信息，以不同的首选目的地。</li><li><strong>layouts</strong> - 负责格式化不同风格的日志信息。</li></ul><p><a href="http://logging.apache.org/log4j/2.x/" target="_blank" rel="noopener">官网地址</a></p><h3 id="1-3Logback"><a href="#1-3Logback" class="headerlink" title="1.3Logback"></a>1.3Logback</h3><p>Logback 是由 log4j 创始人 Ceki Gulcu 设计的又一个开源日记组件，目标是替代 log4j。</p><p>logback 当前分成三个模块：<code>logback-core</code>、<code>logback-classic</code> 和 <code>logback-access</code>。</p><ul><li><code>logback-core</code> - 是其它两个模块的基础模块。</li><li><code>logback-classic</code> - 是 log4j 的一个 改良版本。此外 <code>logback-classic</code> 完整实现 SLF4J API 使你可以很方便地更换成其它日记系统如 log4j 或 JDK14 Logging。</li><li><code>logback-access</code> - 访问模块与 Servlet 容器集成提供通过 Http 来访问日记的功能。</li></ul><p><a href="https://logback.qos.ch/documentation.html" target="_blank" rel="noopener">官网地址</a></p><h3 id="1-4Log4j2"><a href="#1-4Log4j2" class="headerlink" title="1.4Log4j2"></a>1.4Log4j2</h3><p><a href="http://logging.apache.org/log4j/2.x/" target="_blank" rel="noopener">官网地址</a></p><p>按照官方的说法，Log4j2 是 Log4j 和 Logback 的替代。</p><h3 id="1-5-对比：Log4j-vs-Logback-vs-Log4j2"><a href="#1-5-对比：Log4j-vs-Logback-vs-Log4j2" class="headerlink" title="1.5 对比：Log4j vs Logback vs Log4j2"></a>1.5 对比：Log4j vs Logback vs Log4j2</h3><p><strong>Log4j2 大大优于 Log4j 和 Logback。</strong></p><p>Log4j2 相比于 Log4j 和 Logback的优势：</p><ol><li>Log4j2 旨在用作审计日志记录框架。 Log4j 1.x 和 Logback 都会在重新配置时丢失事件。 Log4j 2 不会。在 Logback 中，Appender 中的异常永远不会对应用程序可见。在 Log4j 中，可以将 Appender 配置为允许异常渗透到应用程序。</li><li>Log4j2 在多线程场景中，<a href="https://logging.apache.org/log4j/2.x/manual/async.html" target="_blank" rel="noopener">异步 Loggers</a> 的吞吐量比 Log4j 1.x 和 Logback 高 10 倍，延迟低几个数量级。</li><li>Log4j2 对于独立应用程序是无垃圾的，对于稳定状态日志记录期间的 Web 应用程序来说是低垃圾。这减少了垃圾收集器的压力，并且可以提供更好的响应时间性能。</li><li>Log4j2 使用插件系统，通过添加新的 Appender、Filter、Layout、Lookup 和 Pattern Converter，可以非常轻松地扩展框架，而无需对 Log4j 进行任何更改。</li><li>由于插件系统配置更简单。配置中的条目不需要指定类名。</li><li>支持<a href="https://logging.apache.org/log4j/2.x/manual/customloglevels.html" target="_blank" rel="noopener">自定义日志等级</a>。</li><li>支持 <a href="https://logging.apache.org/log4j/2.x/manual/api.html#LambdaSupport" target="_blank" rel="noopener">lambda 表达式</a>。</li><li>支持<a href="https://logging.apache.org/log4j/2.x/manual/messages.html" target="_blank" rel="noopener">消息对象</a>。</li><li>Log4j 和 Logback 的 Layout 返回的是字符串，而 Log4j2 返回的是二进制数组，这使得它能被各种 Appender 使用。</li><li>Syslog Appender 支持 TCP 和 UDP 并且支持 BSD 系统日志。</li><li>Log4j2 利用 Java5 并发特性，尽量小粒度的使用锁，减少锁的开销。</li></ol><h2 id="2-日志门面汇总"><a href="#2-日志门面汇总" class="headerlink" title="2.日志门面汇总"></a>2.日志门面汇总</h2><p>日志门面是对不同日志框架提供的一个 API 封装，可以在部署的时候不修改任何配置即可接入一种日志实现方案。</p><h3 id="2-1-common-logging"><a href="#2-1-common-logging" class="headerlink" title="2.1 common-logging"></a>2.1 common-logging</h3><p>common-logging 是 apache 的一个开源项目。也称<strong>Jakarta Commons Logging，缩写 JCL</strong>。</p><p>common-logging 的功能是提供日志功能的 API 接口，本身并不提供日志的具体实现（当然，common-logging 内部有一个 Simple logger 的简单实现，但是功能很弱，直接忽略），而是在<strong>运行时</strong>动态的绑定日志实现组件来工作（如 log4j、java.util.loggin）。</p><p><a href="http://commons.apache.org/proper/commons-logging/" target="_blank" rel="noopener">官网地址</a></p><h3 id="2-2-slf4j"><a href="#2-2-slf4j" class="headerlink" title="2.2 slf4j"></a>2.2 slf4j</h3><p>全称为 Simple Logging Facade for Java，即 java 简单日志门面。</p><p>作者: Ceki Gulcu！这位大神写了 Log4j、Logback 和 slf4j，专注日志组件开发五百年，一直只能超越自己。</p><p>类似于 Common-Logging，slf4j 是对不同日志框架提供的一个 API 封装，可以在部署的时候不修改任何配置即可接入一种日志实现方案。但是，slf4j 在<strong>编译时</strong>静态绑定真正的 Log 库。使用 SLF4J 时，如果你需要使用某一种日志实现，那么你必须选择正确的 SLF4J 的 jar 包的集合（各种桥接包）。</p><p><a href="http://www.slf4j.org/" target="_blank" rel="noopener">官网地址</a></p><h3 id="2-3-common-logging-vs-slf4j"><a href="#2-3-common-logging-vs-slf4j" class="headerlink" title="2.3 common-logging vs slf4j"></a>2.3 common-logging vs slf4j</h3><p>slf4j 库类似于 Apache Common-Logging。但是，他在编译时静态绑定真正的日志库。</p><p>slf4j 一大亮点是提供了更方便的日志记录方式：</p><p>不需要使用<code>logger.isDebugEnabled()</code>来解决日志因为字符拼接产生的性能问题。slf4j 的方式是使用<code>{}</code>作为字符串替换符，形式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger.debug(&quot;id: &#123;&#125;, name: &#123;&#125; &quot;, id, name);</span><br></pre></td></tr></table></figure><h2 id="3-日志的最佳实践"><a href="#3-日志的最佳实践" class="headerlink" title="3.日志的最佳实践"></a>3.日志的最佳实践</h2><p>综上所述，使用 slf4j + Logback 可谓是目前最理想的日志解决方案了</p><h2 id="4-实施日志解决方案"><a href="#4-实施日志解决方案" class="headerlink" title="4.实施日志解决方案"></a>4.实施日志解决方案</h2><p>使用日志解决方案基本可分为三步：</p><ol><li>引入 jar 包</li><li>配置</li><li>使用 API</li></ol><p>常见的各种日志解决方案的第 2 步和第 3 步基本一样，实施上的差别主要在第 1 步，也就是使用不同的库。</p><h3 id="4-1-引入-jar-包"><a href="#4-1-引入-jar-包" class="headerlink" title="4.1 引入 jar 包"></a>4.1 引入 jar 包</h3><p>这里首选推荐使用 slf4j + logback 的组合。</p><p>如果你习惯了 common-logging，可以选择 common-logging+log4j。</p><p><strong>强烈建议不要直接使用日志实现组件(logback、log4j、java.util.logging)，理由前面也说过，就是无法灵活替换日志库。</strong></p><p>还有一种情况：你的老项目使用了 common-logging，或是直接使用日志实现组件。如果修改老的代码，工作量太大，需要兼容处理。在下文，都将看到各种应对方法。</p><p><strong>注：当前仍没有方法可以将 slf4j 桥接到 common-logging。</strong></p><h4 id="4-1-1-slf4j-直接绑定日志组件"><a href="#4-1-1-slf4j-直接绑定日志组件" class="headerlink" title="4.1.1 slf4j 直接绑定日志组件"></a>4.1.1 slf4j 直接绑定日志组件</h4><p><strong>slf4j + logback</strong></p><p>添加依赖到 pom.xml 中即可。</p><p><em>logback-classic-1.0.13.jar</em> 会自动将 <em>slf4j-api-1.7.21.jar</em> 和 <em>logback-core-1.0.13.jar</em> 也添加到你的项目中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.0.13&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>slf4j + log4j</strong></p><p>添加依赖到 pom.xml 中即可。</p><p><em>slf4j-log4j12-1.7.21.jar</em> 会自动将 <em>slf4j-api-1.7.21.jar</em> 和 <em>log4j-1.2.17.jar</em> 也添加到你的项目中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.7.21&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>slf4j + java.util.logging</strong></p><p>添加依赖到 pom.xml 中即可。</p><p><em>slf4j-jdk14-1.7.21.jar</em> 会自动将 <em>slf4j-api-1.7.21.jar</em> 也添加到你的项目中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;slf4j-jdk14&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.7.21&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="4-2-slf4j-兼容非-slf4j-日志组件"><a href="#4-2-slf4j-兼容非-slf4j-日志组件" class="headerlink" title="4.2 slf4j 兼容非 slf4j 日志组件"></a>4.2 slf4j 兼容非 slf4j 日志组件</h4><p>在介绍解决方案前，先提一个概念——桥接</p><p><strong>什么是桥接呢</strong></p><p>​    假如你正在开发应用程序所调用的组件当中已经使用了 common-logging，这时你需要 jcl-over-slf4j.jar 把日志信息输出重定向到 slf4j-api，slf4j-api 再去调用 slf4j 实际依赖的日志组件。这个过程称为桥接。</p><p>​    无论你的老项目中使用的是 common-logging 或是直接使用 log4j、java.util.logging，都可以使用对应的桥接 jar 包来解决兼容问题。</p><p><strong>slf4j 兼容 common-logging</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.7.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>slf4j 兼容 log4j</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.7.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>slf4j 兼容 java.util.logging</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jul-to-slf4j&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.7.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="4-3-spring-集成-slf4j"><a href="#4-3-spring-集成-slf4j" class="headerlink" title="4.3 spring 集成 slf4j"></a>4.3 spring 集成 slf4j</h4><p>做 java web 开发，基本离不开 spring 框架。很遗憾，spring 使用的日志解决方案是 common-logging + log4j。</p><p>所以，你需要一个桥接 jar 包：<em>logback-ext-spring</em>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.1.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.logback-extensions&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;logback-ext-spring&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.1.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.7.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="4-4-common-logging-绑定日志组件"><a href="#4-4-common-logging-绑定日志组件" class="headerlink" title="4.4 common-logging 绑定日志组件"></a>4.4 common-logging 绑定日志组件</h4><p><strong>common-logging + log4j</strong></p><p>添加依赖到 pom.xml 中即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;commons-logging&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.2.17&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="4-2-使用-API"><a href="#4-2-使用-API" class="headerlink" title="4.2 使用 API"></a>4.2 使用 API</h3><h4 id="4-2-1-slf4j-用法"><a href="#4-2-1-slf4j-用法" class="headerlink" title="4.2.1 slf4j 用法"></a>4.2.1 slf4j 用法</h4><p>使用 slf4j 的 API 很简单。使用<code>LoggerFactory</code>初始化一个<code>Logger</code>实例，然后调用 Logger 对应的打印等级函数就行了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">public class App &#123;</span><br><span class="line">    private static final Logger log = LoggerFactory.getLogger(App.class);</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String msg = &quot;print log, current level: &#123;&#125;&quot;;</span><br><span class="line">        log.trace(msg, &quot;trace&quot;);</span><br><span class="line">        log.debug(msg, &quot;debug&quot;);</span><br><span class="line">        log.info(msg, &quot;info&quot;);</span><br><span class="line">        log.warn(msg, &quot;warn&quot;);</span><br><span class="line">        log.error(msg, &quot;error&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-common-logging-用法"><a href="#4-2-2-common-logging-用法" class="headerlink" title="4.2.2 common-logging 用法"></a>4.2.2 common-logging 用法</h4><p>common-logging 用法和 slf4j 几乎一样，但是支持的打印等级多了一个更高级别的：<strong>fatal</strong>。</p><p><strong>注意：common-logging 不支持<code>{}</code>替换参数。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.logging.Log;</span><br><span class="line">import org.apache.commons.logging.LogFactory;</span><br><span class="line"></span><br><span class="line">public class JclTest &#123;</span><br><span class="line">    private static final Log log = LogFactory.getLog(JclTest.class);</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String msg = &quot;print log, current level: &quot;;</span><br><span class="line">        log.trace(msg + &quot;trace&quot;);</span><br><span class="line">        log.debug(msg + &quot;debug&quot;);</span><br><span class="line">        log.info(msg + &quot;info&quot;);</span><br><span class="line">        log.warn(msg + &quot;warn&quot;);</span><br><span class="line">        log.error(msg + &quot;error&quot;);</span><br><span class="line">        log.fatal(msg + &quot;fatal&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-log4j2-配置"><a href="#5-log4j2-配置" class="headerlink" title="5. log4j2 配置"></a>5. log4j2 配置</h2><p>log4j2 基本配置形式如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;;</span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">"name1"</span>&gt;</span>value<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">"name2"</span> <span class="attr">value</span>=<span class="string">"value2"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"type"</span> <span class="attr">...</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appender</span> <span class="attr">type</span>=<span class="string">"type"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"type"</span> <span class="attr">...</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appender</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">"name1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"type"</span> <span class="attr">...</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"level"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">"debug"</span> <span class="attr">strict</span>=<span class="string">"true"</span> <span class="attr">name</span>=<span class="string">"XMLConfigTest"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">packages</span>=<span class="string">"org.apache.logging.log4j.test"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">"filename"</span>&gt;</span>target/test.log<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"ThresholdFilter"</span> <span class="attr">level</span>=<span class="string">"trace"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appender</span> <span class="attr">type</span>=<span class="string">"Console"</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Layout</span> <span class="attr">type</span>=<span class="string">"PatternLayout"</span> <span class="attr">pattern</span>=<span class="string">"%m MDC%X%n"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"MarkerFilter"</span> <span class="attr">marker</span>=<span class="string">"FLOW"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"MarkerFilter"</span> <span class="attr">marker</span>=<span class="string">"EXCEPTION"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"ACCEPT"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appender</span> <span class="attr">type</span>=<span class="string">"Console"</span> <span class="attr">name</span>=<span class="string">"FLOW"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Layout</span> <span class="attr">type</span>=<span class="string">"PatternLayout"</span> <span class="attr">pattern</span>=<span class="string">"%C&#123;1&#125;.%M %m %ex%n"</span>/&gt;</span><span class="comment">&lt;!-- class and line number --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"MarkerFilter"</span> <span class="attr">marker</span>=<span class="string">"FLOW"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"MarkerFilter"</span> <span class="attr">marker</span>=<span class="string">"EXCEPTION"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appender</span> <span class="attr">type</span>=<span class="string">"File"</span> <span class="attr">name</span>=<span class="string">"File"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;filename&#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Layout</span> <span class="attr">type</span>=<span class="string">"PatternLayout"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d %p %C&#123;1.&#125; [%t] %m%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appender</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">"org.apache.logging.log4j.test1"</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">type</span>=<span class="string">"ThreadContextMapFilter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">KeyValuePair</span> <span class="attr">key</span>=<span class="string">"test"</span> <span class="attr">value</span>=<span class="string">"123"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">"org.apache.logging.log4j.test2"</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"File"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"trace"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-logback-配置"><a href="#6-logback-配置" class="headerlink" title="6. logback 配置"></a>6. logback 配置</h2><h3 id="lt-configuration-gt"><a href="#lt-configuration-gt" class="headerlink" title="&lt;configuration&gt;"></a><code>&lt;configuration&gt;</code></h3><ul><li>作用：<code>&lt;configuration&gt;</code> 是 logback 配置文件的根元素。</li><li>要点 <ul><li>它有 <code>&lt;appender&gt;</code>、<code>&lt;logger&gt;</code>、<code>&lt;root&gt;</code> 三个子元素。</li></ul></li></ul><p><img src="C:\Users\luoke\AppData\Local\YNote\Data\qqD1124604FDBB6E6C3CC926B19BAA0608\6E1D267D68764CF381FFB7587FB071F8\picture\logback-configuration.jpg" alt=""></p><h3 id="lt-appender-gt"><a href="#lt-appender-gt" class="headerlink" title="&lt;appender&gt;"></a><code>&lt;appender&gt;</code></h3><ul><li>作用：将记录日志的任务委托给名为 appender 的组件。</li><li>要点 <ul><li>可以配置零个或多个。</li><li>它有 <code>&lt;file&gt;</code>、<code>&lt;filter&gt;</code>、<code>&lt;layout&gt;</code>、<code>&lt;encoder&gt;</code> 四个子元素。</li></ul></li><li>属性 <ul><li>name：设置 appender 名称。</li><li>class：设置具体的实例化类。</li></ul></li></ul><h4 id="lt-file-gt"><a href="#lt-file-gt" class="headerlink" title="&lt;file&gt;"></a><code>&lt;file&gt;</code></h4><ul><li>作用：设置日志文件路径。</li></ul><h4 id="lt-filter-gt"><a href="#lt-filter-gt" class="headerlink" title="&lt;filter&gt;"></a><code>&lt;filter&gt;</code></h4><ul><li>作用：设置过滤器。</li><li>要点 <ul><li>可以配置零个或多个。</li></ul></li></ul><h4 id="lt-layout-gt"><a href="#lt-layout-gt" class="headerlink" title="&lt;layout&gt;"></a><code>&lt;layout&gt;</code></h4><ul><li>作用：设置 appender。</li><li>要点 <ul><li>可以配置零个或一个。</li></ul></li><li>属性 <ul><li>class：设置具体的实例化类。</li></ul></li></ul><h4 id="lt-encoder-gt"><a href="#lt-encoder-gt" class="headerlink" title="&lt;encoder&gt;"></a><code>&lt;encoder&gt;</code></h4><ul><li>作用：设置编码。</li><li>要点 <ul><li>可以配置零个或多个。</li></ul></li><li>属性 <ul><li>class：设置具体的实例化类。</li></ul></li></ul><p><img src="C:\Users\luoke\AppData\Local\YNote\Data\qqD1124604FDBB6E6C3CC926B19BAA0608\6E1D267D68764CF381FFB7587FB071F8\picture\logback-appender.jpg" alt=""></p><h3 id="lt-logger-gt"><a href="#lt-logger-gt" class="headerlink" title="&lt;logger&gt;"></a><code>&lt;logger&gt;</code></h3><ul><li>作用：设置 logger。</li><li>要点 <ul><li>可以配置零个或多个。</li></ul></li><li>属性 <ul><li>name</li><li>level：设置日志级别。不区分大小写。可选值：TRACE、DEBUG、INFO、WARN、ERROR、ALL、OFF。</li><li>additivity：可选值：true 或 false。表示要不要使用rootLogger配置（<root>中的输出器）的appender进行输出</root></li></ul></li></ul><h4 id="lt-appender-ref-gt"><a href="#lt-appender-ref-gt" class="headerlink" title="&lt;appender-ref&gt;"></a><code>&lt;appender-ref&gt;</code></h4><ul><li>作用：appender 引用。</li><li>要点 <ul><li>可以配置零个或多个。</li></ul></li></ul><h3 id="lt-root-gt"><a href="#lt-root-gt" class="headerlink" title="&lt;root&gt;"></a><code>&lt;root&gt;</code></h3><ul><li>作用：设置根 logger。</li><li>要点 <ul><li>只能配置一个。</li><li>除了 level，不支持任何属性。level 属性和 <code>&lt;logger&gt;</code> 中的相同。</li><li>有一个子元素 <code>&lt;appender-ref&gt;</code>，与 <code>&lt;logger&gt;</code> 中的相同。</li></ul></li></ul><h3 id="6-1-完整的-logback-xml-参考示例"><a href="#6-1-完整的-logback-xml-参考示例" class="headerlink" title="6.1 完整的 logback.xml 参考示例"></a>6.1 完整的 logback.xml 参考示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- logback中一共有5种有效级别，分别是TRACE、DEBUG、INFO、WARN、ERROR，优先级依次从低到高 --&gt;</span><br><span class="line">&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;60 seconds&quot; debug=&quot;false&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property name=&quot;DIR_NAME&quot; value=&quot;test&quot;/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 将记录日志打印到控制台 --&gt;</span><br><span class="line">  &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- RollingFileAppender begin --&gt;</span><br><span class="line">  &lt;appender name=&quot;ALL&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/all.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;30MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;ERROR&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/error.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;10MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">      &lt;level&gt;ERROR&lt;/level&gt;</span><br><span class="line">      &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">      &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;WARN&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/warn.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;10MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">      &lt;level&gt;WARN&lt;/level&gt;</span><br><span class="line">      &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">      &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;INFO&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/info.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;10MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">      &lt;level&gt;INFO&lt;/level&gt;</span><br><span class="line">      &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">      &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;DEBUG&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/debug.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;10MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">      &lt;level&gt;DEBUG&lt;/level&gt;</span><br><span class="line">      &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">      &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;TRACE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/trace.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;10MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">      &lt;level&gt;TRACE&lt;/level&gt;</span><br><span class="line">      &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">      &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;SPRING&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!-- 根据时间来制定滚动策略 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">      &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/$&#123;DIR_NAME&#125;/springframework.%d&#123;yyyy-MM-dd&#125;.log</span><br><span class="line">      &lt;/fileNamePattern&gt;</span><br><span class="line">      &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据文件大小来制定滚动策略 --&gt;</span><br><span class="line">    &lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">      &lt;maxFileSize&gt;10MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/triggeringPolicy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">      &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] [%-5p] %c&#123;36&#125;.%M - %m%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line">  &lt;!-- RollingFileAppender end --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- logger begin --&gt;</span><br><span class="line">  &lt;!-- 本项目的日志记录，分级打印 --&gt;</span><br><span class="line">  &lt;logger name=&quot;org.zp.notes.spring&quot; level=&quot;TRACE&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;ERROR&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;WARN&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;INFO&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;DEBUG&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;TRACE&quot;/&gt;</span><br><span class="line">  &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- SPRING框架日志 --&gt;</span><br><span class="line">  &lt;logger name=&quot;org.springframework&quot; level=&quot;WARN&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;SPRING&quot;/&gt;</span><br><span class="line">  &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">  &lt;root level=&quot;TRACE&quot;&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;ALL&quot;/&gt;</span><br><span class="line">  &lt;/root&gt;</span><br><span class="line">  &lt;!-- logger end --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h2 id="7-log4j-配置"><a href="#7-log4j-配置" class="headerlink" title="7. log4j 配置"></a>7. log4j 配置</h2><h3 id="完整的-log4j-xml-参考示例"><a href="#完整的-log4j-xml-参考示例" class="headerlink" title="完整的 log4j.xml 参考示例"></a>完整的 log4j.xml 参考示例</h3><p>log4j 的配置文件一般有 xml 格式或 properties 格式。这里为了和 logback.xml 做个对比，就不介绍 properties 了，其实也没太大差别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE log4j:configuration SYSTEM &quot;log4j.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;log4j:configuration xmlns:log4j=&apos;http://jakarta.apache.org/log4j/&apos;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;STDOUT&quot; class=&quot;org.apache.log4j.ConsoleAppender&quot;&gt;</span><br><span class="line">    &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;ConversionPattern&quot;</span><br><span class="line">             value=&quot;%d&#123;yyyy-MM-dd HH:mm:ss,SSS\&#125; [%-5p] [%t] %c&#123;36\&#125;.%M - %m%n&quot;/&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--过滤器设置输出的级别--&gt;</span><br><span class="line">    &lt;filter class=&quot;org.apache.log4j.varia.LevelRangeFilter&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;levelMin&quot; value=&quot;debug&quot;/&gt;</span><br><span class="line">      &lt;param name=&quot;levelMax&quot; value=&quot;fatal&quot;/&gt;</span><br><span class="line">      &lt;param name=&quot;AcceptOnMatch&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;appender name=&quot;ALL&quot; class=&quot;org.apache.log4j.DailyRollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;param name=&quot;File&quot; value=&quot;$&#123;user.dir&#125;/logs/spring-common/jcl/all&quot;/&gt;</span><br><span class="line">    &lt;param name=&quot;Append&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;!-- 每天重新生成日志文件 --&gt;</span><br><span class="line">    &lt;param name=&quot;DatePattern&quot; value=&quot;&apos;-&apos;yyyy-MM-dd&apos;.log&apos;&quot;/&gt;</span><br><span class="line">    &lt;!-- 每小时重新生成日志文件 --&gt;</span><br><span class="line">    &lt;!--&lt;param name=&quot;DatePattern&quot; value=&quot;&apos;-&apos;yyyy-MM-dd-HH&apos;.log&apos;&quot;/&gt;--&gt;</span><br><span class="line">    &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;ConversionPattern&quot;</span><br><span class="line">             value=&quot;%d&#123;yyyy-MM-dd HH:mm:ss,SSS\&#125; [%-5p] [%t] %c&#123;36\&#125;.%M - %m%n&quot;/&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 指定logger的设置，additivity指示是否遵循缺省的继承机制--&gt;</span><br><span class="line">  &lt;logger name=&quot;org.zp.notes.spring&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">    &lt;level value=&quot;error&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;ALL&quot;/&gt;</span><br><span class="line">  &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 根logger的设置--&gt;</span><br><span class="line">  &lt;root&gt;</span><br><span class="line">    &lt;level value=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;</span><br><span class="line">  &lt;/root&gt;</span><br><span class="line">&lt;/log4j:configuration&gt;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://link.juejin.im?target=http%3A//www.slf4j.org/manual.html" target="_blank" rel="noopener">slf4 官方文档</a></li><li><a href="https://link.juejin.im?target=http%3A//logback.qos.ch/" target="_blank" rel="noopener">logback 官方文档</a></li><li><a href="https://link.juejin.im?target=http%3A//logging.apache.org/log4j/1.2/" target="_blank" rel="noopener">log4j 官方文档</a></li><li><a href="https://link.juejin.im?target=http%3A//commons.apache.org/proper/commons-logging/" target="_blank" rel="noopener">commons-logging 官方文档</a></li><li><a href="https://link.juejin.im?target=http%3A//blog.csdn.net/yycdaizi/article/details/8276265" target="_blank" rel="noopener">blog.csdn.net/yycdaizi/ar…</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java-主流日志工具库&quot;&gt;&lt;a href=&quot;#Java-主流日志工具库&quot; class=&quot;headerlink&quot; title=&quot;Java 主流日志工具库&quot;&gt;&lt;/a&gt;Java 主流日志工具库&lt;/h1&gt;&lt;h2 id=&quot;1-日志框架汇总&quot;&gt;&lt;a href=&quot;#1-日志框
      
    
    </summary>
    
      <category term="后端" scheme="https://xiaokegege.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓄水池抽样算法（Reservoir Sampling）</title>
    <link href="https://xiaokegege.github.io/reservoir/"/>
    <id>https://xiaokegege.github.io/reservoir/</id>
    <published>2019-02-14T08:06:45.000Z</published>
    <updated>2019-02-14T09:25:17.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="蓄水池抽样算法（Reservoir-Sampling）"><a href="#蓄水池抽样算法（Reservoir-Sampling）" class="headerlink" title="蓄水池抽样算法（Reservoir Sampling）"></a>蓄水池抽样算法（Reservoir Sampling）</h1><p>​    偶然间看到的这个算法，看到题目，一下子激起了我一个数学系的挑战欲望，最后果然被打脸，太久没动脑子了，转得慢（最后分布式那部分是被空空教会的）。</p><h3 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h3><p><strong>给定一个数据流，数据流长度N很大，且N直到处理完所有数据之前都不可知，请问如何在只遍历一遍数据（O(N)）的情况下，能够随机选取出m个不重复的数据。</strong></p><p>根据题目有以下要求：</p><ol><li>数据流长度N很大且不可知，所以不能一次性存入内存</li><li>时间复杂度为O(N)</li><li>随机选取m个数，每个数被选中的概率为m/N</li></ol><p>第1点限制了不能直接取N内的m个随机数，然后按索引取出数据。第2点限制了不能先遍历一遍，然后分块存储数据，再随机选取。第3点是数据选取绝对随机的保证。讲真，在不知道蓄水池算法前，我想破脑袋也不知道该题做何解。</p><h3 id="核心代码演示："><a href="#核心代码演示：" class="headerlink" title="核心代码演示："></a>核心代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] reservoir = <span class="keyword">new</span> <span class="keyword">int</span>[m];</span><br><span class="line"></span><br><span class="line"><span class="comment">// init</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; reservoir.length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    reservoir[i] = dataStream[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &lt; dataStream.length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 随机获得一个[0, i]内的随机整数</span></span><br><span class="line">    <span class="keyword">int</span> d = rand.nextInt(i + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 如果随机整数落在[0, m-1]范围内，则替换蓄水池中的元素</span></span><br><span class="line">    <span class="keyword">if</span> (d &lt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        reservoir[d] = dataStream[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>注意：这里使用已知长度的数组dataStream来表示未知长度的数据流，并假设数据流长度大于蓄水池容量m。</em></p><h3 id="算法思路："><a href="#算法思路：" class="headerlink" title="算法思路："></a>算法思路：</h3><ol><li>如果接收的数据量小于m，则依次放入蓄水池。</li><li>当接收到第i个数据时，i &gt;= m，在[0, i]范围内取以随机数d，若d的落在[0, m-1]范围内，则用接收到的第i个数据替换蓄水池中的第d个数据。</li><li>重复步骤2。</li></ol><p><strong>当处理完所有的数据时，蓄水池中的每个数据都是以m/N的概率获得的。</strong></p><h3 id="推导m-n："><a href="#推导m-n：" class="headerlink" title="推导m/n："></a>推导m/n：</h3><p>假设数据开始编号为1，<strong>第i个接收到的数据最后能够留在蓄水池中的概率</strong>=<strong>第i个数据进入过蓄水池的概率***</strong>之后第i个数据不被替换的概率**（第i+1到第N次处理数据都不会被替换）。</p><p><em>这句是重点，分2步考虑。首先考虑第i个数会不会进入蓄水池，然后进入了之后，还要不被替换，最后才能留在蓄水池。</em></p><h4 id="考虑将数据放进蓄水池的概率"><a href="#考虑将数据放进蓄水池的概率" class="headerlink" title="考虑将数据放进蓄水池的概率"></a>考虑将数据放进蓄水池的概率</h4><p>1.当i&lt;=m时，数据直接放进蓄水池，所以<strong>第i个数据进入过蓄水池的概率=1</strong>。</p><p>2.当i&gt;m时，在[1,i]内选取随机数d，如果d&lt;=m，则使用第i个数据替换蓄水池中第d个数据，因此<strong>第i个数据进入过蓄水池的概率=m/i</strong>。</p><h4 id="考虑第i个数据不被替换出蓄水池的概率"><a href="#考虑第i个数据不被替换出蓄水池的概率" class="headerlink" title="考虑第i个数据不被替换出蓄水池的概率"></a>考虑第i个数据不被替换出蓄水池的概率</h4><p>3.当i&lt;=m时，程序从接收到第m+1个数据时开始执行替换操作，第m+1次处理会替换池中数据的为m/(m+1)，会替换掉第i个数据的概率为1/m，则第m+1次处理替换掉第i个数据的概率为(m/(m+1))<em>(1/m)=1/(m+1)，不被替换的概率为1-1/(m+1)=m/(m+1)。依次，第m+2次处理不替换掉第i个数据概率为(m+1)/(m+2)…第N次处理不替换掉第i个数据的概率为(N-1)/N。所以，之后**第i个数据不被替换的概率=m/(m+1)\</em>(m+1)/(m+2)*…*(N-1)/N=m/N**。</p><p>4.当i&gt;m时，程序从接收到第i+1个数据时开始有可能替换第i个数据。则参考上述第3点，<strong>之后第i个数据不被替换的概率=i/N</strong>。</p><p>5.结合第1点和第3点可知，当i&lt;=m时，第i个接收到的数据最后留在蓄水池中的概率=1 * m/N=m/N。结合第2点和第4点可知，当i&gt;m时，第i个接收到的数据留在蓄水池中的概率=m/i * i/N=m/N。综上可知，<strong>每个数据最后被选中留在蓄水池中的概率为m/N</strong>。</p><p>(该算法建立在统计学基础上，极其巧妙的获得了m/n的概率)</p><hr><h2 id="拓展：分布式蓄水池抽样（Distributed-Parallel-Reservoir-Sampling）"><a href="#拓展：分布式蓄水池抽样（Distributed-Parallel-Reservoir-Sampling）" class="headerlink" title="拓展：分布式蓄水池抽样（Distributed/Parallel Reservoir Sampling）"></a>拓展：分布式蓄水池抽样（Distributed/Parallel Reservoir Sampling）</h2><p>一块CPU的计算能力再强，也总有内存和磁盘IO拖他的后腿。因此为提高数据吞吐量，分布式的硬件搭配软件是现在的主流。如果遇到超大的数据量，即使是O(N)的时间复杂度，蓄水池抽样程序完成抽样任务也将耗时很久。因此分布式的蓄水池抽样算法应运而生。运作原理如下：</p><ol><li>假设有K台机器，将大数据集分成K个数据流，每台机器使用单机版蓄水池抽样处理一个数据流，抽样m个数据，并最后记录处理的数据量为N1, N2, …, Nk, …, NK(假设m&lt;Nk)。N1+N2+…+NK=N。</li><li>取[1, N]一个随机数d，若d&lt;N1，则在第一台机器的蓄水池中等概率不放回地（1/m）选取一个数据；若N1&lt;=d&lt;(N1+N2)，则在第二台机器的蓄水池中等概率不放回地选取一个数据；一次类推，重复m次，则最终从N大数据集中选出m个数据。</li></ol><h4 id="推导m-N："><a href="#推导m-N：" class="headerlink" title="推导m/N："></a>推导m/N：</h4><ol><li>从第k台机器的蓄水池中选取一个数据放进最终蓄水池的概率为Nk/N。（先选机器）</li><li>第k台机器中的蓄水池数据被选取的概率为m/Nk。（由于每个机器使用单机版蓄水池抽样处理）</li><li>第k台机器蓄水池的一个数据被选中的概率为1/m。（在选择了机器后，相当于在k机器中已经选择了m个数，从这里面选一个数据出来）</li><li>重复m次选取，则每个数据被选中的概率为m*(m/Nk*Nk/N*1/m)=m/N。</li></ol><p>到此蓄水池算法推导完毕</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;蓄水池抽样算法（Reservoir-Sampling）&quot;&gt;&lt;a href=&quot;#蓄水池抽样算法（Reservoir-Sampling）&quot; class=&quot;headerlink&quot; title=&quot;蓄水池抽样算法（Reservoir Sampling）&quot;&gt;&lt;/a&gt;蓄水池抽样
      
    
    </summary>
    
      <category term="算法" scheme="https://xiaokegege.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>校验身份证号逻辑与推算</title>
    <link href="https://xiaokegege.github.io/checkidcard/"/>
    <id>https://xiaokegege.github.io/checkidcard/</id>
    <published>2018-09-10T08:14:40.000Z</published>
    <updated>2019-02-14T09:25:23.940Z</updated>
    
    <content type="html"><![CDATA[<h1 id="校验身份证号逻辑与推算"><a href="#校验身份证号逻辑与推算" class="headerlink" title="校验身份证号逻辑与推算"></a>校验身份证号逻辑与推算</h1><h2 id="身份证号码的编码规则及校验"><a href="#身份证号码的编码规则及校验" class="headerlink" title="身份证号码的编码规则及校验"></a>身份证号码的编码规则及校验</h2><ul><li>身份证号码共18位，由17位本体码和1位校验码组成</li><li>前6位是地址码，表示登记户口时所在地的行政区划代码</li><li>7到14位是出生年月日，采用YYYYMMDD格式；15到17位是顺序码，表示在同一地址码所标识的区域范围内，对同年、同月、同日出生的人编订的顺序号，顺序码的奇数分配给男性，偶数分配给女性，即第17位奇数表示男性，偶数表示女性</li><li>第18位是校验码，采用ISO 7064:1983, MOD 11-2校验字符系统</li></ul><p>一代身份证与二代身份证的区别在于：</p><p>一代身份证是15位，二代身份证是18位；</p><p>一代身份证出生年月日采用YYMMDD格式，二代身份证出生年月日采用YYYYMMDD格式；</p><p>一代身份证无校验码，二代身份证有校验码。</p><h4 id="校验码计算规则"><a href="#校验码计算规则" class="headerlink" title="校验码计算规则"></a>校验码计算规则</h4><p>身份证号码中各个位置上的号码字符值应满足下列公式的校验:</p><blockquote><img src="/checkidcard/1.jpg"></blockquote><p>i表示号码字符从右至左包括校验码字符在内的位置序号；<br>ai表示第i位置上的号码字符值，a1是身份证号码第18位校验码；<br>Wi表示第i位置上的加权因子，加权因子计算公式：</p><blockquote><img src="/checkidcard/2.jpg"></blockquote><h4 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h4><p>以此身份证号作为参考：362401199201011009</p><table><thead><tr><th>i</th><th>18</th><th>17</th><th>16</th><th>15</th><th>14</th><th>13</th><th>12</th><th>11</th><th>10</th><th>9</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>  ai</td><td>3</td><td>6</td><td>2</td><td>4</td><td>0</td><td>1</td><td>1</td><td>9</td><td>9</td><td>2</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>9</td></tr><tr><td>  Wi</td><td>7</td><td>9</td><td>10</td><td>5</td><td>8</td><td>4</td><td>2</td><td>1</td><td>6</td><td>3</td><td>7</td><td>9</td><td>10</td><td>5</td><td>8</td><td>4</td><td>2</td><td>1</td></tr><tr><td>ai*Wi</td><td>21</td><td>54</td><td>20</td><td>20</td><td>0</td><td>4</td><td>2</td><td>9</td><td>54</td><td>6</td><td>0</td><td>9</td><td>0</td><td>5</td><td>8</td><td>0</td><td>0</td><td>9</td></tr></tbody></table><p>a1<em>W1+a2</em>W2+…+a18*W18 = 221 ,221%11 = 1，形如下图：结果397替换为221</p><blockquote><img src="/checkidcard/3.jpg"></blockquote><p>经过推理（同余定理）：</p><blockquote><img src="/checkidcard/1.jpg"></blockquote><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><p>在金融行业软件系统中，对于身份证号码的采集、校验用途甚广。</p><ol><li>身份证号码前6位，可采集客户户籍所在地，只需将国家标准GB/T 2260中定义的行政区划代码导入数据库，程序中进行映射即可；但需要注意的是，行政区划代码每隔几年会修订一次，从笔者手上的2007版来看，共经历了1982年、1984年、1986年、1988年、1991年、1995年、1999年、2002年、2007年九次修订，所以要预留更新机制；</li><li>身份证号码7到14位，可采集客户的出生日期、年龄、生日；</li><li>身份证号码17位，可采集客户的性别，奇数表示男性，偶数表示女性；</li><li>身份证号码的验证渠道，不管验证成功与否，往往都是收费的，比如银行渠道、公安部渠道，在发往这些渠道验证之前，先对其进行长度、正则表达式、校验码的验证，能够适当提高收费验证的成功率，节省成本支出；而且也可以提升用户体验，在用户输入错误时及时反馈而不必等待验证渠道结果的返回。</li></ol><h2 id="校验字符系统"><a href="#校验字符系统" class="headerlink" title="校验字符系统"></a>校验字符系统</h2><p>关于校验字符系统，其国际标准ISO 7064有2个版本，分别是ISO 7064:1983和ISO/IEC 7064:2003，从内容上来说，除了表面的调整，本质上没有区别，我想可以理解为是IEC成立后对其工作范围主权的宣示。那么，对应的国家标准，也有了2个版本，分别是GB/T 17710-1999和GB/T 17710-2008，基本上保证了对国际标准的高水准翻译水平，使英文阅读能力欠佳的读者可以通过国家标准来体会国际标准制定的严谨，并从中受益。</p><p>标准中，提供了如下几个校验字符系统，基本涵盖日常所需。身份证号码校验使用的ISO 7064, MOD 11-2，便是其中之一。在实际项目中，可按需选用。</p><table><thead><tr><th>系统类型</th><th>系统名称</th><th>适用范围</th><th>校验码数目及类型</th><th>数字表示法</th></tr></thead><tbody><tr><td>纯系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>11-2</td><td>数字</td><td>1位数字或附加符X</td><td>1</td></tr><tr><td>纯系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>37-2</td><td>字母数字</td><td>1位数字或字母或附加符*</td><td>2</td></tr><tr><td>纯系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>97-10</td><td>数字</td><td>2位数字</td><td>3</td></tr><tr><td>纯系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>661-26</td><td>字母</td><td>2位字母</td><td>4</td></tr><tr><td>纯系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>1271-36</td><td>字母数字</td><td>2位数字或字母</td><td>5</td></tr><tr><td>混合系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>11,10</td><td>数字</td><td>1位数字</td><td>6</td></tr><tr><td>混合系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>27,26</td><td>字母</td><td>1位字母</td><td>7</td></tr><tr><td>混合系统</td><td>ISO</td><td>7064,</td><td>MOD</td><td>37,36</td><td>字母数字</td><td>1位数字或字母</td><td>8</td></tr></tbody></table><p>表格中可见，校验字符系统，包括纯系统和混合系统。使用一个模数的称为纯系统，系统名称中MOD后第1个数字是模数，第2个数字是基数；使用两个模数的称为混合系统，系统名称中MOD后的2个数字都是模数。</p><h2 id="纯系统和混合系统"><a href="#纯系统和混合系统" class="headerlink" title="纯系统和混合系统"></a>纯系统和混合系统</h2><h4 id="纯系统"><a href="#纯系统" class="headerlink" title="纯系统"></a>纯系统</h4><p>纯系统又包括使用一个校验字符和使用两个校验字符。使用一个校验字符的纯系统与使用两个校验字符的纯系统本质上是相同的，都遵守校验公式：</p><blockquote><img src="/checkidcard/5.jpg"></blockquote><p>只不过，使用一个校验字符的纯系统与使用两个校验字符的纯系统在计算校验字符的方式上略有不同：</p><blockquote><img src="/checkidcard/6.jpg"></blockquote><p>纯系统有两种基本的计算方法，纯系统递归法和纯系统多项式法：</p><blockquote><img src="/checkidcard/7.jpg"></blockquote><h4 id="混合系统"><a href="#混合系统" class="headerlink" title="混合系统"></a>混合系统</h4><blockquote><img src="/checkidcard/8.jpg"></blockquote><p>代码参考：</p><p><code>CheckIdCard</code></p><p><code>ISO7064Util</code></p><p>参考地址：<a href="https://www.jianshu.com/p/ead5b08e9839" target="_blank" rel="noopener">https://www.jianshu.com/p/ead5b08e9839</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;校验身份证号逻辑与推算&quot;&gt;&lt;a href=&quot;#校验身份证号逻辑与推算&quot; class=&quot;headerlink&quot; title=&quot;校验身份证号逻辑与推算&quot;&gt;&lt;/a&gt;校验身份证号逻辑与推算&lt;/h1&gt;&lt;h2 id=&quot;身份证号码的编码规则及校验&quot;&gt;&lt;a href=&quot;#身份证号
      
    
    </summary>
    
      <category term="杂文" scheme="https://xiaokegege.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiaokegege.github.io/hello-world/"/>
    <id>https://xiaokegege.github.io/hello-world/</id>
    <published>2018-07-17T08:50:25.656Z</published>
    <updated>2018-09-10T08:27:17.138Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
